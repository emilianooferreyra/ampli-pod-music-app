import Audio from "@/models/audio";
import AutoGeneratedPlaylist from "@/models/autoGeneratedPlaylist";
import cron from "node-cron";

// The five fields in the cron syntax represent
// (in order) minutes, hours, day of month, month, day of week

const generatedPlaylist = async () => {
  try {
    console.log("[CRON] Starting playlist generation...");

    const topAudiosByCategory = await Audio.aggregate([
      { $sort: { likes: -1 } },
      {
        $group: {
          _id: "$category",
          audios: { $push: "$$ROOT._id" }
        }
      },
      {
        $project: {
          _id: 1,
          audios: { $slice: ["$audios", 20] } // Top 20 audios per category
        }
      }
    ]);

    // Use Promise.all to wait for all updates to complete
    await Promise.all(
      topAudiosByCategory.map((item) =>
        AutoGeneratedPlaylist.updateOne(
          { title: item._id },
          { $set: { items: item.audios } },
          { upsert: true }
        )
      )
    );

    console.log(`[CRON] Successfully updated ${topAudiosByCategory.length} playlists`);
  } catch (error) {
    console.error("[CRON] Error generating playlists:", error);
  }
};

// Run daily at midnight (00:00 Argentina time)
cron.schedule("0 0 * * *", async () => {
  await generatedPlaylist();
}, {
  timezone: "America/Argentina/Buenos_Aires"
});

console.log("[CRON] Playlist generation scheduled for 00:00 daily");
